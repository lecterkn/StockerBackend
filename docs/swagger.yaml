basePath: /
definitions:
  controller.ItemListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/controller.ItemResponse'
        type: array
    required:
    - list
    type: object
  controller.ItemRequest:
    properties:
      janCode:
        type: string
      name:
        type: string
    required:
    - janCode
    - name
    type: object
  controller.ItemResponse:
    properties:
      createdAt:
        type: string
      id:
        type: string
      janCode:
        type: string
      name:
        type: string
      storeId:
        type: string
      updatedAt:
        type: string
    required:
    - createdAt
    - id
    - janCode
    - name
    - storeId
    - updatedAt
    type: object
  controller.ItemStockListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/controller.ItemStockResponse'
        type: array
    required:
    - list
    type: object
  controller.ItemStockRequest:
    properties:
      janCode:
        type: string
      name:
        type: string
      price:
        type: integer
      stock:
        type: integer
      stockMin:
        type: integer
    required:
    - janCode
    - name
    - stock
    - stockMin
    type: object
  controller.ItemStockResponse:
    properties:
      createdAt:
        type: string
      itemId:
        type: string
      janCode:
        type: string
      name:
        type: string
      price:
        type: integer
      stock:
        type: integer
      stockMin:
        type: integer
      storeId:
        type: string
      updatedAt:
        type: string
    required:
    - createdAt
    - itemId
    - janCode
    - name
    - stock
    - stockMin
    - storeId
    - updatedAt
    type: object
  controller.JancodeResponse:
    properties:
      brandName:
        type: string
      makerName:
        type: string
      name:
        type: string
    required:
    - brandName
    - makerName
    - name
    type: object
  controller.StockInCreateRequest:
    properties:
      itemId:
        type: string
      place:
        type: string
      price:
        type: integer
      stocks:
        type: integer
    required:
    - itemId
    - place
    - price
    - stocks
    type: object
  controller.StockInListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/controller.StockInResponse'
        type: array
    required:
    - list
    type: object
  controller.StockInResponse:
    properties:
      createdAt:
        type: string
      id:
        type: string
      itemId:
        type: string
      name:
        type: string
      place:
        type: string
      price:
        type: integer
      stocks:
        type: integer
      storeId:
        type: string
      updatedAt:
        type: string
    required:
    - createdAt
    - id
    - itemId
    - name
    - place
    - price
    - stocks
    - storeId
    - updatedAt
    type: object
  controller.StoreCreateRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  controller.StoreListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/controller.StoreResponse'
        type: array
    required:
    - list
    type: object
  controller.StoreResponse:
    properties:
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
      userId:
        type: string
    required:
    - createdAt
    - id
    - name
    - updatedAt
    - userId
    type: object
  controller.StoreUpdateRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  controller.UserLoginResponse:
    properties:
      token:
        type: string
    required:
    - token
    type: object
  controller.UserRequest:
    properties:
      name:
        type: string
      password:
        type: string
    required:
    - name
    - password
    type: object
  controller.UserResponse:
    properties:
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    required:
    - createdAt
    - id
    - name
    - updatedAt
    type: object
host: localhost:8810
info:
  contact: {}
  description: stocker application server.
  title: StockerAPI
  version: "1.0"
paths:
  /login:
    post:
      parameters:
      - description: ユーザーログインリクエスト
        in: body
        name: request
        schema:
          $ref: '#/definitions/controller.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.UserLoginResponse'
      summary: ユーザーログイン
      tags:
      - user
  /products/{janCode}:
    get:
      parameters:
      - description: JANコード
        in: path
        name: janCode
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.JancodeResponse'
      summary: 製品情報取得
      tags:
      - jancode
  /register:
    post:
      parameters:
      - description: ユーザー作成リクエスト
        in: body
        name: request
        schema:
          $ref: '#/definitions/controller.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.UserResponse'
      summary: ユーザー作成
      tags:
      - user
  /stores:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.StoreListResponse'
            - properties:
                list:
                  items:
                    $ref: '#/definitions/controller.StoreResponse'
                  type: array
              type: object
      summary: 店舗一覧取得
      tags:
      - store
    post:
      parameters:
      - description: 店舗新規作成リクエスト
        in: body
        name: request
        schema:
          $ref: '#/definitions/controller.StoreCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.StoreResponse'
      summary: 店舗新規作成
      tags:
      - store
  /stores/{storeId}:
    patch:
      parameters:
      - description: 店舗ID
        in: path
        name: storeId
        required: true
        type: string
      - description: 店舗更新リクエスト
        in: body
        name: request
        schema:
          $ref: '#/definitions/controller.StoreUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.StoreResponse'
      summary: 店舗更新
      tags:
      - store
  /stores/{storeId}/itemStocks:
    get:
      parameters:
      - description: 店舗ID
        in: path
        name: storeId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.ItemStockListResponse'
            - properties:
                list:
                  items:
                    $ref: '#/definitions/controller.ItemStockResponse'
                  type: array
              type: object
      summary: 商品詳細一覧取得
      tags:
      - item_stock
    post:
      parameters:
      - description: 店舗ID
        in: path
        name: storeId
        required: true
        type: string
      - description: 商品ID
        in: path
        name: itemId
        required: true
        type: string
      - description: 商品詳細作成リクエスト
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controller.ItemStockRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.ItemStockResponse'
      summary: 商品詳細登録
      tags:
      - item_stock
  /stores/{storeId}/itemStocks/{itemId}:
    get:
      parameters:
      - description: 店舗ID
        in: path
        name: storeId
        required: true
        type: string
      - description: 商品ID
        in: path
        name: itemId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.ItemStockResponse'
      summary: 商品詳細取得
      tags:
      - item_stock
    patch:
      parameters:
      - description: 店舗ID
        in: path
        name: storeId
        required: true
        type: string
      - description: 商品ID
        in: path
        name: itemId
        required: true
        type: string
      - description: 商品詳細更新リクエスト
        in: body
        name: request
        schema:
          $ref: '#/definitions/controller.ItemStockRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.ItemStockResponse'
      summary: 商品詳細更新
      tags:
      - item_stock
  /stores/{storeId}/items:
    get:
      parameters:
      - description: 店舗ID
        in: path
        name: storeId
        required: true
        type: string
      - description: 商品名
        in: query
        name: name
        type: string
      - description: Janコード
        in: query
        name: janCode
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.ItemListResponse'
            - properties:
                list:
                  items:
                    $ref: '#/definitions/controller.ItemResponse'
                  type: array
              type: object
      summary: 商品一覧取得
      tags:
      - item
    post:
      parameters:
      - description: 商品作成リクエスト
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controller.ItemRequest'
      - description: 店舗ID
        in: path
        name: storeId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.ItemResponse'
      summary: 商品新規作成
      tags:
      - item
  /stores/{storeId}/items/{itemId}:
    patch:
      parameters:
      - description: 店舗ID
        in: path
        name: storeId
        required: true
        type: string
      - description: 商品ID
        in: path
        name: itemId
        required: true
        type: string
      - description: 商品更新リクエスト
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controller.ItemRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.ItemResponse'
      summary: 商品更新
      tags:
      - item
  /stores/{storeId}/stockIns:
    get:
      parameters:
      - description: 店舗ID
        in: path
        name: storeId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.StockInListResponse'
      summary: 入荷履歴一覧取得
      tags:
      - stock_ins
    post:
      parameters:
      - description: 店舗ID
        in: path
        name: storeId
        required: true
        type: string
      - description: 入荷履歴作成リクエスト
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controller.StockInCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.StockInResponse'
      summary: 入荷履歴作成取得
      tags:
      - stock_ins
swagger: "2.0"
