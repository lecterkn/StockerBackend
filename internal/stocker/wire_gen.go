// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package stocker

import (
	"github.com/google/wire"
	"h11/backend/internal/stocker/application/service"
	"h11/backend/internal/stocker/domain/repository"
	"h11/backend/internal/stocker/infrastructure/database"
	"h11/backend/internal/stocker/infrastructure/repository/implements"
	"h11/backend/internal/stocker/presentation/controller"
)

// Injectors from wire.go:

// コントローラーセット作成
func InitializeController() *ControllersSet {
	db := database.GetMySQLConnection()
	itemRepositoryImpl := implements.NewItemRepositoryImpl(db)
	itemService := service.NewItemService(itemRepositoryImpl)
	itemController := controller.NewItemController(itemService)
	itemStockRepositoryImpl := implements.NewItemStockRepositoryImpl(db)
	itemStockService := service.NewItemStockService(itemStockRepositoryImpl)
	itemStockController := controller.NewItemStockController(itemStockService)
	controllersSet := &ControllersSet{
		ItemController:      itemController,
		ItemStockController: itemStockController,
	}
	return controllersSet
}

// wire.go:

// データベース
var databaseSet = wire.NewSet(database.GetMySQLConnection)

// リポジトリ
var repositorySet = wire.NewSet(implements.NewItemRepositoryImpl, wire.Bind(new(repository.ItemRepository), new(implements.ItemRepositoryImpl)), implements.NewItemStockRepositoryImpl, wire.Bind(new(repository.ItemStockRepository), new(implements.ItemStockRepositoryImpl)))

// サービス
var serviceSet = wire.NewSet(service.NewItemService, service.NewItemStockService)

// コントローラー
var controllerSet = wire.NewSet(controller.NewItemController, controller.NewItemStockController)

// コントローラーセット
type ControllersSet struct {
	ItemController      controller.ItemController
	ItemStockController controller.ItemStockController
}
